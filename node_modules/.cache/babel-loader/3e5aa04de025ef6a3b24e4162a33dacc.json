{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PYGMALION6\\\\Desktop\\\\crud_productos_react_redux\\\\src\\\\components\\\\ProductoLista.js\";\nimport React, { useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nfunction ProductoLista({\n  producto,\n  guardarRecargarProductos\n}) {\n  const stockProductoRef = useRef('');\n\n  const eliminarProducto = id => {\n    console.log('Eliminando: ', id); //TODO: Eliminar los registros\n\n    Swal.fire({\n      title: '¿Estás seguro?',\n      text: \"¡Es una accion irreversible!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: '¡Si, eliminalo!'\n    }).then(async result => {\n      if (result.value) {\n        try {\n          const url = \"http://localhost:3004/Inventario/\".concat(id);\n          const resulltado = await axios.delete(url);\n\n          if (resulltado.status === 200) {\n            Swal.fire('¡Eliminado!', '¡El producto fue eliminado!', 'success'); //Consultar la API nuevamente\n\n            guardarRecargarProductos(true);\n          }\n        } catch (error) {\n          console.log(error);\n          Swal.fire({\n            type: 'error',\n            title: 'Error',\n            text: 'Hubo un error, vuelva a intentarlo.'\n          });\n        }\n      }\n    });\n  };\n\n  return React.createElement(\"li\", {\n    \"data-categoria\": producto.categoria,\n    className: \"list-group-item d-flex justify-content-between align-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, producto.nombreProducto, \" \", '  '), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, producto.stockProducto, \" unidades en stock\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Precio de venta:\", React.createElement(\"span\", {\n    className: \"font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" $\", producto.precioProducto)), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-info\",\n    onClick: () => producto.stockProducto - 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Vender\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/productos/editar/\".concat(producto.id),\n    className: \"btn btn-success mr-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Editar\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    onClick: () => eliminarProducto(producto.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Eliminar \\xD7\")));\n}\n\nexport default ProductoLista;","map":{"version":3,"sources":["C:\\Users\\PYGMALION6\\Desktop\\crud_productos_react_redux\\src\\components\\ProductoLista.js"],"names":["React","useState","useRef","Link","axios","Swal","ProductoLista","producto","guardarRecargarProductos","stockProductoRef","eliminarProducto","id","console","log","fire","title","text","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","url","resulltado","delete","status","error","categoria","nombreProducto","stockProducto","precioProducto"],"mappings":"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","sourcesContent":["import React, {useState, useRef} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nfunction ProductoLista({producto, guardarRecargarProductos}) {\n    const stockProductoRef = useRef('');\n    const eliminarProducto = id => {\n        console.log('Eliminando: ',id);\n        //TODO: Eliminar los registros\n        Swal.fire({\n            title: '¿Estás seguro?',\n            text: \"¡Es una accion irreversible!\",\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: '¡Si, eliminalo!'\n        }).then( async (result) => {\n            if(result.value) {\n                try {\n                    const url = `http://localhost:3004/Inventario/${id}`;\n                    const resulltado = await axios.delete(url);\n                    if(resulltado.status === 200) {\n                        Swal.fire(\n                            '¡Eliminado!',\n                            '¡El producto fue eliminado!',\n                            'success'\n                        )\n                        //Consultar la API nuevamente\n                        guardarRecargarProductos(true);\n                    }\n                } catch (error) {\n                    console.log(error);\n                    Swal.fire({\n                        type: 'error',\n                        title: 'Error',\n                        text: 'Hubo un error, vuelva a intentarlo.'\n                    })\n                }\n            }\n\n        })\n    }\n    return (\n        <li data-categoria={producto.categoria} className=\"list-group-item d-flex justify-content-between align-weight-bold\">\n            <h4>\n                {producto.nombreProducto} {'  '}\n            </h4>\n            <p>\n                <span className=\"font-weight-bold\">{producto.stockProducto} unidades en stock</span>\n            </p>\n            <p>\n            Precio de venta:\n            <span className=\"font-weight-bold\"> ${producto.precioProducto}</span>\n            </p>\n\n            <button type = \"button\" className = \"btn btn-info\" onClick={() => producto.stockProducto - 1}>\n                    Vender    \n            </button>\n\n            <div>\n                \n                <Link to={`/productos/editar/${producto.id}`} className=\"btn btn-success mr-2\">\n                    Editar\n                </Link>\n                <button type=\"button\" className=\"btn btn-danger\" onClick={() => eliminarProducto(producto.id)}>\n                    Eliminar &times;\n                </button>\n            </div>\n        </li>\n        \n    )\n}\n\nexport default ProductoLista;"]},"metadata":{},"sourceType":"module"}